apiVersion: batch/v1
kind: CronJob
metadata:
  name: cronjob
spec:
  schedule: "{{ .Values.cronjob.schedule }}"
  startingDeadlineSeconds: {{ .Values.cronjob.startingDeadlineSeconds }}
  concurrencyPolicy: {{ .Values.cronjob.concurrencyPolicy }}
  successfulJobsHistoryLimit: {{ .Values.cronjob.successfulJobsHistoryLimit }}
  failedJobsHistoryLimit: {{ .Values.cronjob.failedJobsHistoryLimit }}
  jobTemplate:
    spec:
      template:
        spec:
          serviceAccountName: evekill
          restartPolicy: {{ .Values.cronjob.restartPolicy }}
          containers:
            - name: cron
              image: {{ .Values.cronjob.image }}:{{ .Values.cronjob.version }}
              imagePullPolicy: {{ .Values.imagePullPolicy }}
              {{- if or (eq .Values.cronjob.resources.limits.enabled true) (eq .Values.cronjob.resources.requests.enabled true) }}
              resources:
                {{- if eq .Values.cronjob.resources.limits.enabled true }}
                limits:
                  {{- if .Values.cronjob.resources.limits.cpu }}
                  cpu: {{ .Values.cronjob.resources.limits.cpu }}
                  {{- end }}
                  memory: {{ .Values.cronjob.resources.limits.memory }}
                {{- end }}
                {{- if eq .Values.cronjob.resources.requests.enabled true }}
                requests:
                  {{- if .Values.cronjob.resources.requests.cpu }}
                  cpu: {{ .Values.cronjob.resources.requests.cpu }}
                  {{- end }}
                  memory: {{ .Values.cronjob.resources.requests.memory }}
                {{- end }}
              {{- end }}
              command:
                - php
                - bin/console
                - cron
              volumeMounts:
                - mountPath: /app/resources
                  name: resources
          volumes:
            - name: resources
              persistentVolumeClaim:
                claimName: resources
